<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for RoutingRuleArrayLoader.
 * Generated by PHPUnit on 2010-04-16 at 22:13:40.
 */
class RoutingRuleArrayLoaderTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var RoutingRuleArrayLoader
	 */
	protected $object;

	protected function setUp()
	{
		$this->object = new RoutingRuleArrayLoader();
	}

	protected function tearDown()
	{
	}

	public function testLoad_Success()
	{
		$data = array(
			'first' => array(
				'pattern' => '{controller}/{action}',
				'parameters'  => array(
					'package' => 'Frontend',
				),
				'rules'   => array(
					'controller' => 'string',
					'action'     => 'string',
				)
			)
		);

		$rules = $this->object->load($data);
		$this->assertEquals(1, count($rules));
		$this->assertThat($rules[0], $this->isInstanceOf('RoutingRule'));
	}

	public function testLoad_AutomaticPackage()
	{
		$data = array(
			'first' => array(
				'pattern' => '',
			),
			'second' => array(
				'pattern' => '',
				'parameters' => array(
					'package' => 'MyPackage'
				)
			)
		);
		$loader = new RoutingRuleArrayLoader('Default');
		$rules = $loader->load($data);

		$this->assertEquals(2, count($rules));

		$this->assertThat(
			$rules[0]->getParameter('package'),
			$this->equalTo('Default')
		);

		$this->assertThat(
			$rules[1]->getParameter('package'),
			$this->equalTo('MyPackage')
		);
	}

	public function testLoad_UndefinedPackage()
	{
		$this->setExpectedException('RuntimeException');
		$data = array('first' => array(
			'pattern' => '{var}'
		));
		$rules = $this->object->load($data);
		print_r($rules);
	}
}
