<?php
require_once 'PHPUnit/Framework.php';

require_once TEST_ROOT.'/Fixtures/Components/DependencyInjection/classes.php';

/**
 * Test class for ConstructorComponentAdapter.
 * Generated by PHPUnit on 2010-03-12 at 17:17:10.
 */
class ConstructorComponentAdapterTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var ConstructorComponentAdapter
	 */
	protected $object;

	/**
	 * @var DependencyInjectionContainer
	 */
	protected $container;

	protected function setUp()
	{
		$this->object    = new ConstructorComponentAdapter('key', 'class', array());
		$this->container = new DependencyInjectionContainer();
	}

	protected function tearDown()
	{
	}

	public function testGetInstanceWithNoArguments()
	{
		$adapter = new ConstructorComponentAdapter(null, 'WeakPunch');
		$instance = $adapter->getInstance($this->container);

		$this->assertThat($instance, $this->isInstanceOf('WeakPunch'));
	}

	public function testGetInstanceWithSpecifiedArguments()
	{
		$adapter = new ConstructorComponentAdapter(
			null,
			'DependsOnPunchable',
			array(new ValueArgument(new WeakPunch))
		);
		$instance = $adapter->getInstance($this->container);

		$this->assertThat($instance, $this->isInstanceOf('DependsOnPunchable'));
		$this->assertThat($instance->punchable, $this->isInstanceOf('IPunchable'));
	}

	public function testGetInstanceWithUnspecifiedArguments()
	{
		$this->container->registerComponent('WeakPunch');
		$adapter = new ConstructorComponentAdapter(null, 'DependsOnPunchable');
		$instance = $adapter->getInstance($this->container);
		$this->assertThat($instance, $this->isInstanceOf('DependsOnPunchable'));
		$this->assertThat($instance->punchable, $this->isInstanceOf('IPunchable'));
	}

	public function testCyclicInstantiation()
	{
		$this->setExpectedException('CyclicInstantiationException');
		$this->container->registerComponent('Cyclic');
		$instance = $this->container->getInstanceOf('Cyclic');
	}

	public function testGetArguments()
	{
		$this->assertThat(
			$this->object->getArguments(),
			$this->equalTo(array())
		);
	}
}
?>
