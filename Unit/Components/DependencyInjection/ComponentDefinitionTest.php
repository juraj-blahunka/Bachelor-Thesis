<?php

require_once 'PHPUnit/Framework.php';

/**
 * Test class for ComponentDefinition.
 * Generated by PHPUnit on 2010-03-13 at 14:39:22.
 */
class ComponentDefinitionTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var ComponentDefinition
	 */
	protected $object;

	protected function setUp()
	{
		$this->object = new ComponentDefinition('HelloClass');
	}

	protected function tearDown()
	{
	}

	public function testSetClass()
	{
		$this->object->setClass('AnotherClass');
		$this->assertThat(
			'AnotherClass',
			$this->equalTo($this->object->getClass())
		);
	}

	public function testGetClass()
	{
		$this->assertThat(
			'HelloClass',
			$this->equalTo($this->object->getClass())
		);
	}

	public function testSetArguments()
	{
		$args = array(
			array('component', 'other_component'),
			array('value',     'value'),
			array('constant',  'constant_key')
		);
		$this->object->setArguments($args);

		$this->assertThat(
			$args,
			$this->equalTo($this->object->getArguments())
		);
	}

	public function testGetArguments()
	{
		$this->assertThat(
			array(),
			$this->equalTo($this->object->getArguments())
		);
	}

	public function testAddArgument()
	{
		$argument = array('component', 'some_component_key');
		$this->object->addArgument($argument[0], $argument[1]);

		$this->assertThat(
			array($argument),
			$this->equalTo($this->object->getArguments())
		);
	}

	public function testSetScope()
	{
		$this->object->setScope('shared');
		$this->assertThat(
			'shared',
			$this->equalTo($this->object->getScope())
		);
	}

	public function testGetScope()
	{
		$this->assertThat(
			'transient',
			$this->equalTo($this->object->getScope())
		);
	}

	public function testSetMethods()
	{
		$methods = array(
			array('method_name1', array(array('component', 'reference_to_component'))).
			array('another_method', array())
		);
		$this->object->setMethods($methods);

		$this->assertThat(
			$methods,
			$this->equalTo($this->object->getMethods())
		);
	}

	public function testAddMethod()
	{
		$this->object->addMethod('method1');
		$this->object->addMethod('method2', array(
			array('component', 'component_key')
		));

		$this->assertThat(
			array(
				array('method1', array()),
				array('method2', array(
					array('component', 'component_key')
				))
			),
			$this->equalto($this->object->getMethods())
		);
	}

	public function testGetMethods()
	{
		$this->assertThat(
			array(),
			$this->equalTo($this->object->getMethods())
		);
	}
}
