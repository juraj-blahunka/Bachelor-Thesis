<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for ContainerBuilder.
 * Generated by PHPUnit on 2010-04-16 at 21:01:08.
 */
class ContainerBuilderTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var ContainerBuilder
	 */
	protected $object;

	protected function setUp()
	{
		$this->object = new ContainerBuilder();
	}

	protected function tearDown()
	{
	}

	public function testSetConstant()
	{
		$this->object->setConstant('my_val', 'val');
		$this->assertThat(
			$this->object->getConstant('my_val'),
			$this->equalTo('val')
		);
	}

	public function testGetConstant()
	{
		$this->assertThat(
			$this->object->getConstant('undefined'),
			$this->equalTo(null)
		);
	}

	public function testAddConstants()
	{
		$consts = array(
			'val1' => array('nested', 'array'),
			'another' => 'const',
		);
		$this->object->addConstants($consts);
		$this->assertThat(
			$this->object->getConstants(),
			$this->equalTo($consts)
		);
	}

	public function testGetConstants()
	{
		$this->assertThat(
			$this->object->getConstants(),
			$this->equalTo(array())
		);
	}

	public function testRegisterComponent()
	{
		$def = $this->object->registerComponent('Service');
		$this->assertThat(
			$this->object->getDefinition('Service'),
			$this->identicalTo($def)
		);
	}

	public function testGetDefinition()
	{
		$this->assertThat(
			$this->object->getDefinition('undefined'),
			$this->equalTo(null)
		);
	}

	public function testGetDefinitions()
	{
		$this->assertThat(
			$this->object->getDefinitions(),
			$this->equalTo(array())
		);
		$def = $this->object->registerComponent('Service');
		$this->assertThat(
			$this->object->getDefinitions(),
			$this->equalTo(array('Service' => $def))
		);
	}

	public function testMerge()
	{
		$this->object->addConstants(array(
			'first'  => 'to overwrite',
			'second' => 'cannot be overwritten'
		));
		$this->object->registerComponent('First')->setClass('To_Overwrite');
		$second = $this->object->registerComponent('Second');

		$builder = new ContainerBuilder();
		$builder->addConstants(array(
			'first' => 'new value',
			'third' => 'unseen',
		));
		$first = $builder->registerComponent('First')->setClass('Write_It_Over');
		$third = $builder->registerComponent('Third');

		$this->object->merge($builder);

		$this->assertThat(
			$this->object->getConstants(),
			$this->equalTo(array(
				'first'  => 'new value',
				'second' => 'cannot be overwritten',
				'third'  => 'unseen'
			))
		);

		$this->assertThat(
			$this->object->getDefinitions(),
			$this->equalTo(array(
				'First' =>  $first,
				'Second' => $second,
				'Third'  => $third,
			))
		);
	}
}
