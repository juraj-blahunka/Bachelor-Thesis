<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for ControllerInvokeListener.
 * Generated by PHPUnit on 2010-04-26 at 18:06:19.
 */
class ControllerInvokeListenerTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var ControllerInvokeListener
	 */
	protected $object;

	protected function setUp()
	{
	}

	protected function tearDown()
	{
	}

	public function testHandle()
	{
		$mock = $this->getMock('IActionInvoker');
		$this->object = new ControllerInvokeListener($mock);
		$mock->expects($this->once())->method('canInvoke')
			->will($this->returnValue(true));
		$mock->expects($this->once())->method('invoke')
			->will($this->returnValue('response instance'));

		$event = new Event($this, 'controller.invoke', array(
			'route' => $this->getMock('IRoute'),
			'controller' => null
		));

		$this->assertThat(
			$this->object->handle($event),
			$this->equalTo(true)
		);

		$this->assertThat(
			$event->getValue(),
			$this->equalTo('response instance')
		);
	}

	public function testHandle_NotSuccessful()
	{
		$mock = $this->getMock('IActionInvoker');
		$this->object = new ControllerInvokeListener($mock);
		$mock->expects($this->once())->method('canInvoke')
			->will($this->returnValue(false));

		$event = new Event($this, 'controller.invoke', array(
			'route' => $this->getMock('IRoute'),
			'controller' => null
		));

		$this->assertThat(
			$this->object->handle($event),
			$this->equalTo(false)
		);
	}
}
