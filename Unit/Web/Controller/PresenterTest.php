<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Presenter.
 * Generated by PHPUnit on 2010-05-06 at 19:48:57.
 */
class PresenterTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var Presenter
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new PresenterStub_PresenterSuite();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	public function testBind()
	{
		$this->object->bind(array(
			'public' => 'model1',
			'protected' => 'model2',
		));
		$this->assertThat(
			$this->object->getPublic(),
			$this->equalTo('model1_by_accessor')
		);
		$this->assertThat(
			$this->object->getProtected(),
			$this->equalTo('model2')
		);
	}

	public function testBind_Fail()
	{
		$this->setExpectedException('RuntimeException');
		$this->object->bind(array(
			'unknown' => 'cannot bind private',
		));
	}

	public function testBindOne()
	{
		$this->object->bindOne('public', 'model1');
		$this->assertThat(
			$this->object->getPublic(),
			$this->equalTo('model1_by_accessor')
		);
	}

	public function testBindOne_Fail()
	{
		$this->setExpectedException('RuntimeException');
		$this->object->bindOne('unknown', 'some data');
	}
}

class PresenterStub_PresenterSuite extends Presenter
{
	public $public;
	protected $protected;

	public function setPublic($public)
	{
		$this->public = $public.'_by_accessor';
	}

	public function getPublic()
	{
		return $this->public;
	}

	protected function setProtected($protected)
	{
		$this->protected = $protected;
	}

	public function getProtected()
	{
		return $this->protected;
	}
}