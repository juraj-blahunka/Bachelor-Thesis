<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Application.
 * Generated by PHPUnit on 2010-04-27 at 13:28:52.
 */
class ApplicationTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var Application
	 */
	protected $object;

	/**
	 * @var DependencyInjectionContainer
	 */
	protected $container;

	protected function setUp()
	{
		$this->object = new ApplicationStub_TestSuite('dev', true);
		$this->container = $this->object->getContainer();
		$this->container->define('event_emitter_service')
			->setClass('LazyEventEmitter');
		$this->container->define('sample_listener')
			->addNote('listener', array(
				array('sample.event', 'resolve'),
			));
	}

	protected function tearDown()
	{
	}

	public function testConfigure()
	{
		// configure usually returns instance of container builder
		$this->object->configure();

	}

	public function testConfigure_WithBlankApplication()
	{
		// with blanks
		$app = new BlankApplicationStub_TestSuite('dev', true);
		$app->setContainer($this->container);

		$app->configure();
	}

	public function testGetEnvironment()
	{
		$this->assertThat(
			$this->object->getEnvironment(),
			$this->equalTo('dev')
		);
		$this->assertThat(
			$this->object->getContainer()->getConstant('application.env'),
			$this->equalTo('dev')
		);
	}

	public function testIsDebug()
	{
		$this->assertThat(
			$this->object->isDebug(),
			$this->equalTo(true)
		);
		$this->assertThat(
			$this->object->getContainer()->getConstant('application.debug'),
			$this->equalTo(true)
		);
	}

	public function testSetContainer()
	{
		$mock = $this->getMock('IDependencyInjectionContainer');
		$this->object->setContainer($mock);
		$this->assertThat(
			$this->object->getContainer(),
			$this->identicalTo($mock)
		);
	}

	public function testGetContainer()
	{
		$this->assertThat(
			$this->object->getContainer(),
			$this->isInstanceOf('IDependencyInjectionContainer')
		);
	}
}

class BlankApplicationStub_TestSuite extends Application
{
	public function run() {}
	public function registerPackages() {}
	public function registerPackagePaths() {}
	public function registerConfiguration() {}
}

class ApplicationStub_TestSuite extends BlankApplicationStub_TestSuite
{
	public function registerPackages()
	{
		return array(

		);
	}

	public function registerPackagePaths()
	{
		return array(

		);
	}
}
