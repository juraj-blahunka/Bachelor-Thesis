<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for PathCollection.
 * Generated by PHPUnit on 2010-04-20 at 10:41:13.
 */
class PathCollectionTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var PathCollection
	 */
	protected $object;

	protected $dir;

	protected function setUp()
	{
		$this->object = new PathCollection();
		$this->dir    =  dirname(__FILE__);
	}

	protected function tearDown()
	{
	}

	public function testSetPaths()
	{
		$this->object->setPaths(array(
			'testing.purpose' => array(FIXTURES_ROOT),
			'another'         => array($this->dir),
		));
		$this->assertThat(
			$this->object->getAll(),
			$this->equalTo(array(FIXTURES_ROOT, $this->dir))
		);
	}

	public function testAddPath()
	{
		$this->object->addPath('testing.fixtures', FIXTURES_ROOT);
		$this->assertThat(
			$this->object->getPaths('testing.fixtures'),
			$this->equalTo(array(FIXTURES_ROOT))
		);
	}

	public function testAddPath_FailsAtUndefinedDirectory()
	{
		$this->setExpectedException('UnexpectedValueException');
		$this->object->addPath('fails', FIXTURES_ROOT.'/Undefined_Directory');
	}

	public function testGetPaths()
	{
		$this->assertThat(
			$this->object->getPaths('undefined.type'),
			$this->equalTo(array())
		);
	}

	public function testGetAll()
	{
		$this->assertThat(
			$this->object->getAll(),
			$this->equalTo(array())
		);
	}

	public function testAddPaths()
	{
		$this->object->addPaths('tests', array(
			FIXTURES_ROOT, $this->dir,
		));
		$this->assertThat(
			$this->object->getAll(),
			$this->equalTo(array(
				FIXTURES_ROOT, $this->dir
			)))
		;
	}

	public function testMerge()
	{
		$this->object->addPath('tests', FIXTURES_ROOT);
		$this->object->addPath('tests', dirname($this->dir));
		$collection = new PathCollection(array(
			'tests'   => array(FIXTURES_ROOT, $this->dir),
			'another' => array($this->dir)
		));
		$this->object->merge($collection);

		$this->assertThat(
			$this->object->getAll(),
			$this->equalTo(array(
				FIXTURES_ROOT,
				dirname($this->dir),
				$this->dir,
				$this->dir
			))
		);

		$this->assertThat(
			$collection->getAll(),
			$this->equalTo(array(
				FIXTURES_ROOT,
				$this->dir,
				$this->dir,
			))
		);
	}
}
