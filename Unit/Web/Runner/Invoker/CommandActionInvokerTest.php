<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for CommandActionInvoker.
 * Generated by PHPUnit on 2010-04-26 at 20:36:29.
 */
class CommandActionInvokerTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var CommandActionInvoker
	 */
	protected $object;

	/**
	 * @var PathCollection
	 */
	protected $paths;

	/**
	 * @var ReflectionCache
	 */
	protected $cache;

	/**
	 * @var DependencyInjectionContainer
	 */
	protected $container;

	/**
	 * @var ActionNameStrategy
	 */
	protected $actionNaming;

	/**
	 * @var CommandNameStrategy
	 */
	protected $naming;

	protected function setUp()
	{
		$this->paths     = new PathCollection(array('Sample.commands' => array(FIXTURES_ROOT.'/Web/Runner/Invoker')));
		$this->container = new DependencyInjectionContainer();
		$this->cache     = $this->container->getInstanceOfWith('ReflectionCache', array(array('component', 'ClassReflectionCache'), array('component', 'MethodReflectionCache')));
		$this->actionNaming = new ActionNameStrategy();
		$this->naming    = new CommandNameStrategy();
		$this->object    = new CommandActionInvoker($this->paths, $this->container, $this->cache, $this->actionNaming, $this->naming);
	}

	protected function tearDown()
	{
	}

	public function testCanInvoke()
	{
		$this->assertThat(
			$this->object->canInvoke($this->createController(), $this->createRoute()),
			$this->equalTo(true)
		);
	}

	public function testInvoke()
	{
		$this->assertThat(
			$this->object->invoke($this->createController(), $this->createRoute()),
			$this->equalTo('OK')
		);
	}

	public function testCanInvoke_OnRemote()
	{
		$this->assertThat(
			$this->object->canInvoke($this->createController(), $this->createRoute()->setAction('remote')),
			$this->equalTo(true)
		);
	}

	public function testInvoke_OnRemote()
	{
		$result = $this->object->invoke($this->createController(), $this->createRoute()->setAction('remote'));
		$this->assertThat($result, $this->equalTo('Another OK'));
	}

	public function testCanInvoke_OnFalsy()
	{
		// can invoke, because it is declared in ControllerStub, but invocation will fail
		$this->assertThat(
			$this->object->canInvoke($this->createController(), $this->createRoute()->setAction('falsy')),
			$this->equalTo(true)
		);
	}

	public function testInvoke_OnFalsy()
	{
		// cannot find command class inside the specified directory
		$this->setExpectedException('RuntimeException');
		$this->object->invoke($this->createController(), $this->createRoute()->setAction('falsy'));
	}

	protected function createRoute()
	{
		$route = new Route();
		$route->setPackage('Sample')
			->setAction('sample');
		return $route;
	}

	protected function createController()
	{
		return new ControllerStub_CommandActionInvokerTest();
	}
}

class ControllerStub_CommandActionInvokerTest extends Controller
{
	public function getCommands()
	{
		return array(
			'sampleAction' => 'SampleCommandActionInvokerTest',
			'remoteAction' => 'Inside/RemoteStub',
			'falsyAction'  => 'Not/In/Reach'
		);
	}
}

class SampleCommandActionInvokerTestCommand extends Controller
{
	public function execute() { return 'OK'; }
}
